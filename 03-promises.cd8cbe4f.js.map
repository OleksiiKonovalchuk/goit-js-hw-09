{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUP,MAAAQ,IAEpBM,EAAO,CAAEE,SAAAT,EAAUP,MAAAQ,G,GAEpBA,E,IAEFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAEf,OADFmB,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANtB,EAAM,OAC/D,CAAEgB,WAAUhB,Q,IAEpBuB,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAClBmB,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANtB,EAAM,M,IAkBzED,EAAKM,KAAKoB,iBAAiB,UARV,SAAAC,GACfA,EAAEC,iBARqB,SAAC3B,EAAOG,EAAMC,GAErC,IADA,IAAIwB,EAAW,EACNC,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAEhCvB,EAAcuB,EADdD,EAAiB,IAANC,EAAU7B,EAAS4B,GAAYzB,E,CAM5C2B,CACEC,OAAOhC,EAAKC,MAAMgC,OAClBD,OAAOhC,EAAKI,KAAK6B,OACjBD,OAAOhC,EAAKK,OAAO4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\"),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      return { position, delay };\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\nconst promisePostponer = (delay, step, amount) => {\n  let newDelay = 0;\n  for (let i = 1; i <= amount; i += 1) {\n    newDelay = i === 1 ? delay : (newDelay += step);\n    createPromise(i, newDelay);\n  }\n};\nconst onSubmit = e => {\n  e.preventDefault();\n  promisePostponer(\n    Number(refs.delay.value),\n    Number(refs.step.value),\n    Number(refs.amount.value)\n  );\n};\nrefs.form.addEventListener('submit', onSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","newDelay","i","$ce04d3a99e08e73b$var$promisePostponer","Number","value"],"version":3,"file":"03-promises.cd8cbe4f.js.map"}